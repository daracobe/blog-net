@model MyBlog.Post

@{
    ViewBag.Title = "Edit the post";

    var tagsList = string.Join(", ", ViewBag.Tags as List<string>);
}


@using (Html.BeginForm("Edit", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Post</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PostID)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Tags</label>
            <div class="col-md-10">
                @Html.TextBox("tags", "", new { @class = "form-control", @maxlength = "150", @placeholder = "Separate each tag using a comma ','.", @Value = @tagsList })
                @Html.ValidationMessageFor(model => model.PostTagMaps, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Short description</label>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ShortDescription, new { @class = "form-control", @placeholder = "What would you like to show on index?" })
                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Content</label>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @placeholder = "What would you like to write?" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
               
        <div class="form-group">
            <label class="control-label col-md-2">Category</label>
            <div class="col-md-10">
                @Html.DropDownList("Category_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Category_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Post" class="btn btn-default" />
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>


